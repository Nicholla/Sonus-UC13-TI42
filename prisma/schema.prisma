// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Album {
  id         Int      @id @default(autoincrement())
  nome       String
  url_imagem String
  musicas    Musica[]
  artista    Artista  @relation(fields: [id_artista], references: [id])

  id_artista Int

  @@map("albuns")
}

model Artista {
  id         Int     @id @default(autoincrement())
  nome       String
  url_imagem String
  albuns     Album[]

  @@map("artistas")
}

model Avaliacao {
  id            Int    @id @default(autoincrement())
  media         Float
  campo_avaliar String

  @@map("avaliacao")
}

model Musica {
  id    Int      @id @default(autoincrement())
  nome  String
  tempo DateTime
  album Album    @relation(fields: [id_album], references: [id])

  id_album Int

  @@map("musica")
}

model Usuario {
  id         Int      @id @default(autoincrement())
  email      String
  nickname   String
  senha      String
  url_imagem String
  criado_em  DateTime @default(now())

  @@map("usuarios")
}

/**
 * rotas get para serem feitas:
 * 15 ultimas musicas cadastradas
 * 5 ultimos albuns cadastrados
 */








/*
#1452 - Cannot add or update a child row: a foreign key constraint fails

significa que voc√™ est√° tentando inserir valores na tabela albuns com id_artista que n√£o existem na tabela artistas ‚Äî e como h√° uma chave estrangeira (FOREIGN KEY) conectando albuns.id_artista ‚Üí artistas.id, o banco impede a inser√ß√£o para manter a integridade.

‚úÖ Solu√ß√µes poss√≠veis
üîß Op√ß√£o 1: Inserir os artistas primeiro
Antes de inserir os √°lbuns, voc√™ precisa garantir que os artistas com os ids usados (1 a 5) j√° existem na tabela artistas.

Aqui est√° um exemplo de como inserir esses artistas fict√≠cios:

sql

INSERT INTO artistas (id, nome) VALUES
(1, 'Chappell Roan'),
(2, 'Beyonc√©'),
(3, 'Kendrick Lamar'),
(4, 'Peggy Gou'),
(5, 'Tyla');


Depois disso, voc√™ poder√° rodar este comando para os √°lbuns:

sql
INSERT INTO albuns (id, id_artista, nome, url_imagem) VALUES
(1, 1, 'The Rise and Fall of a Midwest Princess', 'https://example.com/album1.jpg'),
(2, 2, 'Cowboy Carter', 'https://example.com/album2.jpg'),
(3, 3, 'Not Like Us', 'https://example.com/album3.jpg'),
(4, 4, 'Yaeji', 'https://example.com/album4.jpg'),
(5, 5, 'Tyla (Deluxe)', 'https://example.com/album5.jpg');
üîç Op√ß√£o 2: Verificar se os artistas j√° existem



Execute este comando para ver se os ids 1 a 5 est√£o cadastrados:

sql
SELECT * FROM artistas WHERE id BETWEEN 1 AND 5;
Se nenhum resultado aparecer, ent√£o voc√™ precisa criar os artistas primeiro (como mostrado acima).
 */