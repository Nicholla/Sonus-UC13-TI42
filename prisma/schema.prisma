// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Album {
  id         Int      @id @default(autoincrement())
  nome       String
  url_imagem String
  descricao  String
  musicas    Musica[]
  artista    Artista  @relation(fields: [id_artista], references: [id])

  id_artista Int

  @@map("albuns")
}

model Artista {
  id         Int     @id @default(autoincrement())
  nome       String
  url_imagem String
  albuns     Album[]

  @@map("artistas")
}

model Avaliacao {
  id            Int    @id @default(autoincrement())
  media         Float
  campo_avaliar String

  @@map("avaliacao")
}

model Musica {
  id    Int      @id @default(autoincrement())
  nome  String
  tempo DateTime
  album Album    @relation(fields: [id_album], references: [id])

  id_album Int

  @@map("musica")
}

model Usuario {
  id         Int      @id @default(autoincrement())
  email      String
  nickname   String
  senha      String
  criado_em  DateTime @default(now())
  @@map("usuarios")
}

/**
 * rotas get para serem feitas:
 * 15 ultimas musicas cadastradas
 * 5 ultimos albuns cadastrados
 */
